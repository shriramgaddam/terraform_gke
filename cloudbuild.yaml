steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"

# [START tf-init]
- id: 'tf init'
  name: 'hashicorp/terraform:1.3.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      if [ -d "environments/project/$BRANCH_NAME/" ] && [ -d "environments/resources/$BRANCH_NAME/" ]; then
        cd environments/project/$BRANCH_NAME
        terraform init || exit 1
        cd ../../../
        cd environments/resources/$BRANCH_NAME
        terraform init || exit 1
        
        dir="environments/resources/$BRANCH_NAME/"
        env=${dir%*/}
        env=${env#*/} 
        echo ""
        echo "*************** TERRAFORM INIT ******************"
        echo "******* At environment: ${env} ********"
        echo "*************************************************"
        cd ../../../
      fi 
# [END tf-init]

# [START tf-fmt]
- id: 'tf fmt'
  name: 'hashicorp/terraform:1.3.0'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      if [ -d "environments/project/$BRANCH_NAME/" ] && [ -d "environments/resources/$BRANCH_NAME/" ]; then
        cd environments/project/$BRANCH_NAME
        terraform fmt || exit 1
        cd environments/resources/$BRANCH_NAME
        terraform fmt || exit 1
        
        dir=${environments/resources/$BRANCH_NAME/}
        env=${dir%*/}
        env=${env#*/} 
        echo ""
        echo "*************** TERRAFORM FMT ******************"
        echo "******* At environment: ${env} ********"
        echo "*************************************************"
        cd ../../../
      fi 
# [END tf-fmt]

# [START tf-validate]
- id: 'tf validate'
  name: 'hashicorp/terraform:1.3.0'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      if [ -d "environments/project/$BRANCH_NAME/" ] && [ -d "environments/resources/$BRANCH_NAME/" ]; then
        cd environments/project/$BRANCH_NAME
        terraform validate || exit 1
        cd environments/resources/$BRANCH_NAME
        terraform validate || exit 1
        
        dir=${environments/resources/$BRANCH_NAME/}
        env=${dir%*/}
        env=${env#*/} 
        echo ""
        echo "*************** TERRAFORM VALIDATE ******************"
        echo "******* At environment: ${env} ********"
        echo "*************************************************"
        cd ../../../
      fi 
# [END tf-validate]


# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.3.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "environments/project/$BRANCH_NAME/" ] && [ -d "environments/resources/$BRANCH_NAME/" ]; then
        cd environments/project/$BRANCH_NAME
        terraform plan || exit 1
        cd environments/resources/$BRANCH_NAME
        terraform plan || exit 1
        
        dir=${environments/resources/$BRANCH_NAME/}
        env=${dir%*/}
        env=${env#*/} 
        echo ""
        echo "*************** TERRAFORM PLAN ******************"
        echo "******* At environment: ${env} ********"
        echo "*************************************************"
        cd ../../../
      fi 
# [END tf-plan]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.3.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      if [ -d "environments/project/$BRANCH_NAME/" ] && [ -d "environments/resources/$BRANCH_NAME/" ]; then
        cd environments/project/$BRANCH_NAME
        terraform apply -auto-approve || exit 1
        cd environments/resources/$BRANCH_NAME
        terraform apply -auto-approve || exit 1
        
        dir=${environments/resources/$BRANCH_NAME/}
        env=${dir%*/}
        env=${env#*/} 
        echo ""
        echo "*************** TERRAFORM APPLY ******************"
        echo "******* At environment: ${env} ********"
        echo "*************************************************"
        cd ../../../      
        
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '$BRANCH_NAME' does not represent an official environment."
        echo "*******************************************************************************"
      fi
# [END tf-apply]      